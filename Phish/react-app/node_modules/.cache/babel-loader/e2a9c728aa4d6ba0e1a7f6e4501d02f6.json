{"ast":null,"code":"const LOAD_ALL_PRODUCTS = 'products/LOAD_ALL_PRODUCTS';\n\nconst loadAllProducts = products => ({\n  type: LOAD_ALL_PRODUCTS,\n  list\n});\n\nexport const getProductsThunk = () => async dispatch => {\n  const response = await fetch(`/api/products`);\n\n  if (response.ok) {\n    const allProducts = await response.json();\n    dispatch(loadAllProducts(allProducts));\n    return allProducts;\n  }\n};\nconst initialState = {\n  allProducts: {},\n  singleProduct: {}\n};\n\nconst productsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_ALL_PRODUCTS:\n      {\n        const allProductsState = {};\n        action.list.forEach(product => allProductsState[productsReducer.id] = product);\n        return { ...state,\n          allProducts: allProductsState,\n          singleProduct: {}\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default productsReducer;","map":{"version":3,"sources":["/home/cahzzm/aug-CoHort/projects/Capstone/Phish/Phish/Phish/react-app/src/store/product.js"],"names":["LOAD_ALL_PRODUCTS","loadAllProducts","products","type","list","getProductsThunk","dispatch","response","fetch","ok","allProducts","json","initialState","singleProduct","productsReducer","state","action","allProductsState","forEach","product","id"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,4BAA1B;;AAGA,MAAMC,eAAe,GAAGC,QAAQ,KAAK;AACjCC,EAAAA,IAAI,EAAEH,iBAD2B;AAEjCI,EAAAA;AAFiC,CAAL,CAAhC;;AAMA,OAAO,MAAMC,gBAAgB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACpD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAF,CAA5B;;AAEA,MAAGD,QAAQ,CAACE,EAAZ,EAAgB;AACZ,UAAMC,WAAW,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA1B;AACAL,IAAAA,QAAQ,CAACL,eAAe,CAACS,WAAD,CAAhB,CAAR;AACA,WAAOA,WAAP;AACH;AACJ,CARM;AAWP,MAAME,YAAY,GAAG;AACjBF,EAAAA,WAAW,EAAE,EADI;AAEjBG,EAAAA,aAAa,EAAE;AAFE,CAArB;;AAMA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACb,IAAf;AACI,SAAKH,iBAAL;AAAwB;AACpB,cAAMiB,gBAAgB,GAAG,EAAzB;AACAD,QAAAA,MAAM,CAACZ,IAAP,CAAYc,OAAZ,CAAoBC,OAAO,IACvBF,gBAAgB,CAACH,eAAe,CAACM,EAAjB,CAAhB,GAAuCD,OAD3C;AAGA,eAAO,EACH,GAAGJ,KADA;AAEHL,UAAAA,WAAW,EAAEO,gBAFV;AAGHJ,UAAAA,aAAa,EAAE;AAHZ,SAAP;AAKH;;AAED;AACI,aAAOE,KAAP;AAdR;AAgBH,CAjBD;;AAoBA,eAAeD,eAAf","sourcesContent":["const LOAD_ALL_PRODUCTS = 'products/LOAD_ALL_PRODUCTS'\n\n\nconst loadAllProducts = products => ({\n    type: LOAD_ALL_PRODUCTS,\n    list\n})\n\n\nexport const getProductsThunk = () => async dispatch => {\n    const response = await fetch(`/api/products`)\n\n    if(response.ok) {\n        const allProducts = await response.json()\n        dispatch(loadAllProducts(allProducts))\n        return allProducts\n    }\n}\n\n\nconst initialState = {\n    allProducts: {},\n    singleProduct: {}\n}\n\n\nconst productsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_ALL_PRODUCTS: {\n            const allProductsState = {}\n            action.list.forEach(product => (\n                allProductsState[productsReducer.id] = product\n            ))\n            return {\n                ...state,\n                allProducts: allProductsState,\n                singleProduct: {}\n            }\n        }\n\n        default:\n            return state\n    }\n}\n\n\nexport default productsReducer\n"]},"metadata":{},"sourceType":"module"}